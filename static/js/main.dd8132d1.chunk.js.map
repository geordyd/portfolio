{"version":3,"sources":["components/NavBar/NavBar.js","components/LandingPage/LandingPage.js","components/About/About.js","components/PortfolioItems/PortfolioItems.js","components/Layout.js","App.js","registerServiceWorker.js","index.js"],"names":["NavBar","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","displayName","name","inherits","createClass","key","value","scroller","scrollTo","duration","delay","smooth","_this2","react_default","a","createElement","Navbar","inverse","collapseOnSelect","className","Header","Brand","href","to","onClick","scrollToLandingPage","Toggle","Collapse","Nav","pullRight","NavItem","eventKey","scrollToAbout","scrollToPortfolio","Component","LandingPage","modules","Col","Image","src","circle","class","About","PortfolioItems","Layout","Grid","fluid","Row","NavBar_NavBar_NavBar","LandingPage_LandingPage_LandingPage","About_About_About","PortfolioItems_PortfolioItems_PortfolioItems","sm","props","children","App","Layout_Layout","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","baseUrl","document","getElementsByTagName","getAttribute","rootElement","getElementById","ReactDOM","render","BrowserRouter","basename","App_App","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"iVAUaA,EAAb,SAAAC,GAAA,SAAAD,IAAA,IAAAE,EAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAN,GAAA,QAAAO,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAAT,EAAAC,OAAAS,EAAA,EAAAT,CAAAE,MAAAJ,EAAAE,OAAAU,EAAA,EAAAV,CAAAJ,IAAAe,KAAAC,MAAAd,EAAA,CAAAI,MAAAW,OAAAP,MACEQ,YAAclB,EAAOmB,KADvBhB,EAAA,OAAAC,OAAAgB,EAAA,EAAAhB,CAAAJ,EAAAC,GAAAG,OAAAiB,EAAA,EAAAjB,CAAAJ,EAAA,EAAAsB,IAAA,sBAAAC,MAAA,WAIIC,WAASC,SAAS,cAAe,CAC/BC,SAAU,IACVC,MAAO,EACPC,OAAQ,qBAPd,CAAAN,IAAA,gBAAAC,MAAA,WAYIC,WAASC,SAAS,QAAS,CACzBC,SAAU,IACVC,MAAO,EACPC,OAAQ,qBAfd,CAAAN,IAAA,oBAAAC,MAAA,WAoBIC,WAASC,SAAS,iBAAkB,CAClCC,SAAU,IACVC,MAAO,EACPC,OAAQ,qBAvBd,CAAAN,IAAA,SAAAC,MAAA,WA2BW,IAAAM,EAAAvB,KACP,OACEwB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQC,SAAO,EAACC,kBAAgB,EAACC,UAAU,oBACzCN,EAAAC,EAAAC,cAACC,EAAA,EAAOI,OAAR,KACEP,EAAAC,EAAAC,cAACC,EAAA,EAAOK,MAAR,KACER,EAAAC,EAAAC,cAAA,KAAGO,KAAK,SAASH,UAAU,cAAcI,GAAG,oBAAoBC,QAAS,kBAAMZ,EAAKa,wBAApF,SAEFZ,EAAAC,EAAAC,cAACC,EAAA,EAAOU,OAAR,OAEFb,EAAAC,EAAAC,cAACC,EAAA,EAAOW,SAAR,KAGEd,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAKC,WAAS,GACZhB,EAAAC,EAAAC,cAACe,EAAA,EAAD,CAASC,SAAU,EAAGT,KAAK,IAAIH,UAAU,QAAQI,GAAG,cAAcC,QAAS,kBAAMZ,EAAKoB,kBAAtF,SAGAnB,EAAAC,EAAAC,cAACe,EAAA,EAAD,CAASC,SAAU,EAAGT,KAAK,IAAIH,UAAU,iBAAiBI,GAAG,kBAAkBC,QAAS,kBAAMZ,EAAKqB,sBAAnG,oBA3CZlD,EAAA,CAA4BmD,+BCLfC,EAAb,SAAAnD,GAAA,SAAAmD,IAAA,IAAAlD,EAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA8C,GAAA,QAAA7C,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAAT,EAAAC,OAAAS,EAAA,EAAAT,CAAAE,MAAAJ,EAAAE,OAAAU,EAAA,EAAAV,CAAAgD,IAAArC,KAAAC,MAAAd,EAAA,CAAAI,MAAAW,OAAAP,MACEQ,YAAckC,EAAYjC,KAD5BhB,EAAA,OAAAC,OAAAgB,EAAA,EAAAhB,CAAAgD,EAAAnD,GAAAG,OAAAiB,EAAA,EAAAjB,CAAAgD,EAAA,EAAA9B,IAAA,SAAAC,MAAA,WAII,OACEO,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACqB,EAAA,QAAD,CAASlC,KAAK,cAAciB,UAAU,WACpCN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,kBACbN,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACsB,EAAA,EAAD,KACExB,EAAAC,EAAAC,cAACuB,EAAA,EAAD,CAAOC,IAAI,kCAAkCC,QAAM,KAErD3B,EAAAC,EAAAC,cAAA,OAAK0B,MAAM,cAAX,wBACA5B,EAAAC,EAAAC,cAAA,OAAK0B,MAAM,cAAX,wBACA5B,EAAAC,EAAAC,cAAA,OAAK0B,MAAM,WAAX,wCAddN,EAAA,CAAiCD,aCDpBQ,UAAb,SAAA1D,GAAA,SAAA0D,IAAA,IAAAzD,EAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAqD,GAAA,QAAApD,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAAT,EAAAC,OAAAS,EAAA,EAAAT,CAAAE,MAAAJ,EAAAE,OAAAU,EAAA,EAAAV,CAAAuD,IAAA5C,KAAAC,MAAAd,EAAA,CAAAI,MAAAW,OAAAP,MACEQ,YAAcyC,EAAMxC,KADtBhB,EAAA,OAAAC,OAAAgB,EAAA,EAAAhB,CAAAuD,EAAA1D,GAAAG,OAAAiB,EAAA,EAAAjB,CAAAuD,EAAA,EAAArC,IAAA,SAAAC,MAAA,WAII,OACEO,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACqB,EAAA,QAAD,CAASlC,KAAK,QAAQiB,UAAU,WAC9BN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,kBACbN,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,2BATd2B,EAAA,CAA2BR,cCCdS,UAAb,SAAA3D,GAAA,SAAA2D,IAAA,IAAA1D,EAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAsD,GAAA,QAAArD,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAAT,EAAAC,OAAAS,EAAA,EAAAT,CAAAE,MAAAJ,EAAAE,OAAAU,EAAA,EAAAV,CAAAwD,IAAA7C,KAAAC,MAAAd,EAAA,CAAAI,MAAAW,OAAAP,MACEQ,YAAc0C,EAAezC,KAD/BhB,EAAA,OAAAC,OAAAgB,EAAA,EAAAhB,CAAAwD,EAAA3D,GAAAG,OAAAiB,EAAA,EAAAjB,CAAAwD,EAAA,EAAAtC,IAAA,SAAAC,MAAA,WAII,OACEO,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACqB,EAAA,QAAD,CAASlC,KAAK,iBAAiBiB,UAAU,WACvCN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,kBACbN,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,6BAEAF,EAAAC,EAAAC,cAAA,kCAEAF,EAAAC,EAAAC,cAAA,0CAbd4B,EAAA,CAAoCT,cCGvBU,EAAb,SAAA5D,GAAA,SAAA4D,IAAA,IAAA3D,EAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAuD,GAAA,QAAAtD,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAAT,EAAAC,OAAAS,EAAA,EAAAT,CAAAE,MAAAJ,EAAAE,OAAAU,EAAA,EAAAV,CAAAyD,IAAA9C,KAAAC,MAAAd,EAAA,CAAAI,MAAAW,OAAAP,MACEQ,YAAc2C,EAAO1C,KADvBhB,EAAA,OAAAC,OAAAgB,EAAA,EAAAhB,CAAAyD,EAAA5D,GAAAG,OAAAiB,EAAA,EAAAjB,CAAAyD,EAAA,EAAAvC,IAAA,SAAAC,MAAA,WAII,OACEO,EAAAC,EAAAC,cAAC8B,EAAA,EAAD,CAAMC,OAAK,GACTjC,EAAAC,EAAAC,cAACgC,EAAA,EAAD,KAEElC,EAAAC,EAAAC,cAACiC,EAAD,MAEAnC,EAAAC,EAAAC,cAACkC,EAAD,MAEApC,EAAAC,EAAAC,cAACmC,EAAD,MAEArC,EAAAC,EAAAC,cAACoC,EAAD,MAEAtC,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAKe,GAAI,GACN/D,KAAKgE,MAAMC,gBAjBxBV,EAAA,CAA4BV,aCHPqB,6MACnBtD,YAAcsD,EAAIrD,6EAGhB,OACEW,EAAAC,EAAAC,cAACyC,EAAD,aAL2BtB,aCK3BuB,EAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DA6BN,SAASC,EAAgBC,GACvBC,UAAUC,cACPC,SAASH,GACTI,KAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBG,QACfT,UAAUC,cAAcS,WAK1BC,QAAQC,IAAI,6CAKZD,QAAQC,IAAI,2CAMrBC,MAAM,SAAAC,GACLH,QAAQG,MAAM,4CAA6CA,KC7DjE,IAAMC,EAAUC,SAASC,qBAAqB,QAAQ,GAAGC,aAAa,QAChEC,EAAcH,SAASI,eAAe,QAE5CC,IAASC,OACP1E,EAAAC,EAAAC,cAACyE,EAAA,EAAD,CAAeC,SAAUT,GACvBnE,EAAAC,EAAAC,cAAC2E,EAAD,OAEFN,GDIa,WACb,GAA6C,kBAAmBnB,UAAW,CAGzE,GADkB,IAAI0B,IAAIC,aAAwBjC,OAAOC,UAC3CiC,SAAWlC,OAAOC,SAASiC,OAIvC,OAGFlC,OAAOmC,iBAAiB,OAAQ,WAC9B,IAAM9B,EAAK,GAAAhE,OAAM4F,aAAN,sBAEPnC,EAwCV,SAAiCO,GAE/B+B,MAAM/B,GACHI,KAAK,SAAA4B,GAGkB,MAApBA,EAASC,SACuD,IAAhED,EAASE,QAAQC,IAAI,gBAAgBC,QAAQ,cAG7CnC,UAAUC,cAAcmC,MAAMjC,KAAK,SAAAC,GACjCA,EAAaiC,aAAalC,KAAK,WAC7BT,OAAOC,SAAS2C,aAKpBxC,EAAgBC,KAGnBc,MAAM,WACLF,QAAQC,IACN,mEA5DA2B,CAAwBxC,GAGxBD,EAAgBC,MCrBxByC","file":"static/js/main.dd8132d1.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n//import { Link } from 'react-router-dom';\r\nimport { /*Glyphicon,*/ Nav, Navbar, NavItem, /*NavDropdown, MenuItem*/ } from 'react-bootstrap';\r\n//import { LinkContainer } from 'react-router-bootstrap';\r\nimport './NavBar.css';\r\nimport { scroller, /*Events, animateScroll as scroll*/} from 'react-scroll';\r\n\r\n\r\n\r\n\r\nexport class NavBar extends Component {\r\n  displayName = NavBar.name\r\n\r\n  scrollToLandingPage() {\r\n    scroller.scrollTo('LandingPage', {\r\n      duration: 800,\r\n      delay: 0,\r\n      smooth: 'easeInOutQuart'\r\n    })\r\n  }\r\n\r\n  scrollToAbout() {\r\n    scroller.scrollTo('About', {\r\n      duration: 800,\r\n      delay: 0,\r\n      smooth: 'easeInOutQuart'\r\n    })\r\n  }\r\n\r\n  scrollToPortfolio() {\r\n    scroller.scrollTo('PortfolioItems', {\r\n      duration: 800,\r\n      delay: 0,\r\n      smooth: 'easeInOutQuart'\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Navbar inverse collapseOnSelect className=\"navbar-fixed-top\">\r\n        <Navbar.Header>\r\n          <Navbar.Brand >\r\n            <a href=\"#brand\" className=\"LandingPage\" to=\"ScrollLandingPage\" onClick={() => this.scrollToLandingPage()} >Home</a>\r\n          </Navbar.Brand>\r\n          <Navbar.Toggle />\r\n        </Navbar.Header>\r\n        <Navbar.Collapse>\r\n \r\n          \r\n          <Nav pullRight>\r\n            <NavItem eventKey={1} href=\"#\" className=\"About\" to=\"ScrollAbout\" onClick={() => this.scrollToAbout()}>\r\n              About\r\n            </NavItem>\r\n            <NavItem eventKey={2} href=\"#\" className=\"PortfolioItems\" to=\"ScrollPortfolio\" onClick={() => this.scrollToPortfolio()}>\r\n              Portfolio\r\n            </NavItem>\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport './LandingPage.css';\r\nimport { Element } from 'react-scroll';\r\nimport { Image, Col, /*Row*/ } from 'react-bootstrap';\r\n\r\nexport class LandingPage extends Component {\r\n  displayName = LandingPage.name\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Element name=\"LandingPage\" className=\"element\" >\r\n          <div className=\"flex-container\">\r\n            <div>\r\n              <Col>\r\n                <Image src='https://via.placeholder.com/150' circle/>\r\n              </Col>\r\n              <div class=\"intro-name\">Hello, I'm Geordy!!!</div>\r\n              <div class=\"intro-name\">Hello, I'm Geordy!!!</div>\r\n              <div class=\"tagline\">Student Software Engineering</div>\r\n              \r\n            </div>\r\n          </div>\r\n        </Element>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport './About.css';\r\nimport { Element } from 'react-scroll';\r\n\r\nexport class About extends Component {\r\n  displayName = About.name\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Element name=\"About\" className=\"element\" >\r\n          <div className=\"flex-container\">\r\n            <div>\r\n              <h1>About</h1>\r\n            </div>\r\n          </div>\r\n        </Element>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport './PortfolioItems.css';\r\nimport { Element } from 'react-scroll';\r\n\r\n\r\nexport class PortfolioItems extends Component {\r\n  displayName = PortfolioItems.name\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Element name=\"PortfolioItems\" className=\"element\">\r\n          <div className=\"flex-container\">\r\n            <div>\r\n              <h1>Portfolio Items</h1>\r\n\r\n              <p>This is test text boi</p>\r\n\r\n              <p>This is test text boi</p>\r\n\r\n            </div>\r\n          </div>\r\n        </Element>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Col, Grid, Row } from 'react-bootstrap';\r\n\r\nimport { NavBar } from './NavBar/NavBar';\r\nimport { LandingPage } from './LandingPage/LandingPage';\r\nimport { About } from './About/About';\r\nimport { PortfolioItems } from './PortfolioItems/PortfolioItems';\r\n\r\nexport class Layout extends Component {\r\n  displayName = Layout.name\r\n\r\n  render() {\r\n    return (\r\n      <Grid fluid>\r\n        <Row> \r\n\r\n          <NavBar />\r\n          \r\n          <LandingPage />\r\n          \r\n          <About />         \r\n\r\n          <PortfolioItems />\r\n\r\n          <Col sm={9}>\r\n            {this.props.children}\r\n          </Col>\r\n        </Row>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\n//import { Route } from 'react-router';\r\nimport { Layout } from './components/Layout';\r\n\r\n\r\nexport default class App extends Component {\r\n  displayName = App.name\r\n\r\n  render() {\r\n    return (\r\n      <Layout>\r\n        {/* <Route exact path='/' component={Home} />\r\n        <Route path='/counter' component={Counter} />\r\n        <Route path='/fetchdata' component={FetchData} /> */}\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import 'bootstrap/dist/css/bootstrap.css';\r\nimport 'bootstrap/dist/css/bootstrap-theme.css';\r\nimport './index.css';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nconst baseUrl = document.getElementsByTagName('base')[0].getAttribute('href');\r\nconst rootElement = document.getElementById('root');\r\n\r\nReactDOM.render(\r\n  <BrowserRouter basename={baseUrl}>\r\n    <App />\r\n  </BrowserRouter>,\r\n  rootElement);\r\n\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}